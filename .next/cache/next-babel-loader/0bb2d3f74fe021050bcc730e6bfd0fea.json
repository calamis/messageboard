{"ast":null,"code":"var _jsxFileName = \"/Users/damboy/Projects/nextjs/messageboard/pages/new.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter } from 'next/router';\nimport { Button, Form, FormControl, FormGroup, Spinner, Container } from 'react-bootstrap';\n\nconst NewNote = () => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: '',\n    description: ''\n  });\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: validated,\n    1: setValidated\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    console.log('useEffect'); // Run for Errors\n\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        // console.log('check to success');\n        createNote(); //http request to API\n        // alert('Create note successfully!');\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  const createNote = async () => {\n    try {\n      const res = await fetch(`http://localhost:3000/api/notes`, {\n        method: 'POST',\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      });\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  const validate = () => {\n    let err = {};\n\n    if (!form.title) {\n      err.title = 'Title is required!';\n    }\n\n    if (!form.description) {\n      err.description = 'Description is required!';\n    }\n\n    return err;\n  };\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Create Message\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, isSubmitting ? __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Loading...\")) : __jsx(Form, {\n    noValidate: true,\n    validated: validated,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"title.ControlInput1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 29\n    }\n  }, \"Title\"), __jsx(Form.Control, {\n    required: true,\n    type: \"text\",\n    placeholder: \"New Note\",\n    name: \"title\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }), errors.title ? __jsx(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, errors.title) : null), __jsx(Form.Group, {\n    controlId: \"description.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, \"Description\"), __jsx(Form.Control, {\n    required: true,\n    as: \"textarea\",\n    placeholder: \"you are awesome\",\n    name: \"description\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }), errors.description ? __jsx(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, errors.description) : null), __jsx(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"Submit\"))));\n};\n\nexport default NewNote;","map":{"version":3,"sources":["/Users/damboy/Projects/nextjs/messageboard/pages/new.js"],"names":["Link","useState","useEffect","fetch","useRouter","Button","Form","FormControl","FormGroup","Spinner","Container","NewNote","form","setForm","title","description","isSubmitting","setIsSubmitting","errors","setErrors","validated","setValidated","router","console","log","Object","keys","length","createNote","res","method","headers","body","JSON","stringify","push","error","handleChange","e","target","name","value","handleSubmit","preventDefault","errs","validate","err"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useState, useEffect } from 'react'\nimport fetch from 'isomorphic-unfetch'\nimport { useRouter } from 'next/router'\nimport {\n    Button,\n    Form,\n    FormControl,\n    FormGroup,\n    Spinner,\n    Container\n} from 'react-bootstrap'\n\nconst NewNote = () => {\n    const [form, setForm] = useState({title: '', description: ''})\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [errors, setErrors] = useState({});\n    const [validated, setValidated] = useState(false);\n    const router = useRouter();\n\n    useEffect(() => {\n        console.log('useEffect');\n        // Run for Errors\n        if (isSubmitting) {\n            if (Object.keys(errors).length === 0) {\n                // console.log('check to success');\n                createNote(); //http request to API\n                // alert('Create note successfully!');\n            } else {\n                setIsSubmitting(false);\n            }\n        }   \n    }, [errors])\n\n    const createNote = async () => {\n        try {\n            const res = await fetch(`http://localhost:3000/api/notes`, {\n                method: 'POST',\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n            })\n            router.push(\"/\");\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const handleChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errs = validate();\n        setErrors(errs);\n        setIsSubmitting(true);\n    }\n\n    const validate = () => {\n        let err = {};\n\n        if (!form.title) {\n            err.title = 'Title is required!';\n        }\n        if (!form.description) {\n            err.description = 'Description is required!'\n        }\n\n        return err;\n    }\n\n    return (\n        <Container>\n            <h1>Create Message</h1>\n            <div>\n                {\n                    isSubmitting \n                    ? <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner>\n                    : <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <Form.Group controlId=\"title.ControlInput1\">\n                            <Form.Label>Title</Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\" \n                                placeholder=\"New Note\"\n                                name=\"title\"\n                                onChange={handleChange} \n                            />\n                            {\n                              errors.title \n                                  ? <p className=\"error\">{errors.title}</p> \n                                  : null \n                            }\n                        </Form.Group>\n                        <Form.Group controlId=\"description.ControlTextarea1\">\n                            <Form.Label>Description</Form.Label>\n                            <Form.Control \n                                required\n                                as=\"textarea\" \n                                placeholder=\"you are awesome\"\n                                name=\"description\"\n                                onChange={handleChange} \n                            />\n                            {\n                              errors.description \n                                  ? <p className=\"error\">{errors.description}</p> \n                                  : null \n                            }\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">Submit</Button>\n                    </Form>\n                }\n            </div>\n        </Container>\n    )\n}\n\nexport default NewNote"]},"metadata":{},"sourceType":"module"}