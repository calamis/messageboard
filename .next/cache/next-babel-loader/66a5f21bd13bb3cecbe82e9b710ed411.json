{"ast":null,"code":"var _jsxFileName = \"/Users/damboy/Projects/nextjs/messageboard/pages/[id]/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport { Spinner, Button, Modal } from 'react-bootstrap';\nimport { Confirm } from 'react-confirm-bootstrap';\n\nconst singleNote = ({\n  note\n}) => {\n  const {\n    0: confirm,\n    1: setConfirm\n  } = useState(false);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: show,\n    1: setShow\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    if (isDeleting) {\n      deleteNote();\n    }\n  }, [isDeleting]);\n\n  const open = () => setShow(true);\n\n  const close = () => setShow(false);\n\n  const onConfirm = async () => {\n    setIsDeleting(true);\n    close();\n  };\n\n  const deleteNote = async () => {\n    const noteID = router.query.id;\n\n    try {\n      const deleted = await fetch(`http://localhost:3000/api/notes/${noteID}`, {\n        method: 'Delete'\n      });\n      router.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"main__single__note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 32\n    }\n  }, \"Back to Board\"))), __jsx(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, isDeleting ? __jsx(Spinner, {\n    animation: \"border\",\n    role: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }\n  }, \"Loading...\")) : __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, note.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, note.description), __jsx(Button, {\n    variant: \"danger\",\n    type: \"submit\",\n    onClick: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Delete\")), __jsx(Modal, {\n    show: show,\n    onHide: close,\n    backdrop: \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, __jsx(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Delete\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, \"Are you sure you want to delete this?\"), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    variant: \"secondary\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Cancel\"), __jsx(Button, {\n    variant: \"primary\",\n    onClick: onConfirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Confirm\")))));\n};\n\nsingleNote.getInitialProps = async ({\n  query: {\n    id\n  }\n}) => {\n  const res = await fetch(`http://localhost:3000/api/notes/${id}`);\n  const {\n    data\n  } = await res.json();\n  return {\n    note: data\n  };\n};\n\nexport default singleNote;","map":{"version":3,"sources":["/Users/damboy/Projects/nextjs/messageboard/pages/[id]/index.js"],"names":["fetch","useState","useEffect","useRouter","Link","Spinner","Button","Modal","Confirm","singleNote","note","confirm","setConfirm","isDeleting","setIsDeleting","show","setShow","router","deleteNote","open","close","onConfirm","noteID","query","id","deleted","method","push","error","console","log","title","description","getInitialProps","res","data","json"],"mappings":"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","sourcesContent":["import fetch from 'isomorphic-unfetch'\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport Link from 'next/link'\nimport { Spinner, Button, Modal } from 'react-bootstrap'\nimport { Confirm } from 'react-confirm-bootstrap'\n\nconst singleNote = ({ note }) => {\n    const [confirm, setConfirm] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [show, setShow] = useState(false);\n    const router = useRouter();\n\n    useEffect(() => {\n        if (isDeleting) {\n            deleteNote();\n        }\n    }, [isDeleting])\n\n    const open = () => setShow(true);\n    const close = () => setShow(false);\n\n    const onConfirm = async () => {\n        setIsDeleting(true);\n        close();\n    }\n\n    const deleteNote = async () => {\n        const noteID = router.query.id;\n        try {\n            const deleted = await fetch(`http://localhost:3000/api/notes/${noteID}`, {\n                method: 'Delete'\n            });\n            router.push(\"/\");\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return (\n        <div className=\"main__single__note\">\n            <div className=\"container text-left\">\n                <Link href=\"/\"><a>Back to Board</a></Link>\n            </div>\n            <div className=\"container text-center\">\n                {\n                    isDeleting\n                    ?   <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\">Loading...</span>\n                        </Spinner>\n                    : <>\n                        <h1>{note.title}</h1>\n                        <p>{note.description}</p>\n                        <Button variant=\"danger\" type=\"submit\" onClick={open}>Delete</Button>\n                    </>\n                }\n                <Modal show={show} onHide={close} backdrop=\"static\">\n                    <Modal.Header>\n                    <Modal.Title>Delete</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete this?</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={close}>\n                        Cancel\n                    </Button>\n                    <Button variant=\"primary\" onClick={onConfirm}>\n                        Confirm\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n        </div>  \n    )\n}\n\nsingleNote.getInitialProps = async ({ query: { id } }) => {\n    const res = await fetch(`http://localhost:3000/api/notes/${id}`)\n    const { data } = await res.json();\n\n    return { note: data }\n}\n\nexport default singleNote;   "]},"metadata":{},"sourceType":"module"}